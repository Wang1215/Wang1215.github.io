[{"title":"数据库","date":"2019-11-03T21:43:55.000Z","path":"2019/11/04/数据库/","text":"第一章讲义1、如何在命令行配置 mysql 数据库 找到 mysql 安装目录的 bin 目录 放置到 path 环境变量中 2、启动/停止 mysql 启动 netstartmysqla 停止 mysql net stop mysqla 3、登录/退出 mysql mysql -hlocalhost -P3306 -uroot -p 输入密码 123456 退出 mysql exit quit \\q 4、DDLData Definition Language createdropaltertruncate DQLDataQueryLanguageselectshow DMLData Manipulation Languaginsertupdatedelete 5、数据类型 binary、int、float、double、char、varchar、text、datetime 6、添加数据库 create databasefirst_db charset utf-8;7、查看数据库 showdatabases； show create database; 8、删除数据 dropdatabase db1; 9、使用数据表前需要先打开数据表所在的数据库 use db2 10、创建表 create table student( Id int, stuidchar(10), stunamevarchar(10)); 11、查询当前数据库下有哪些表 showtables 12、查询表结构 sescstudent 13、数据库备份与还原 mysqldump -uroot -p first_db&gt;c:\\123456.sql 还原 source c:\\123456.sql 第二章讲义1.数据库没有大小写之分 2.关键词大写，自定义的小写 3.修改表内容的关键词 alter table 表名 （动作） 改表名 动作 rename 新表名 改字段类型 动作 modify 字段名 新类型 改字段名称 动作 change 旧名称 新名称 新类型 增加字段 动作 add 新增字段名 新增字段类型 删除字段 动作 drop 字段名 删除表 drop table 表名; 删除数据库 drop database 数据库名; 第二章 1、数据完整性 主键约束 primary key 特点是非空且唯一 两种写法，直接写在字段后，或者写在创建语句最后 primary key （字段名） 联合主键 写在创建语句最后 primary key(字段 1，字段 2) 2、设置字段自增长 auto_increment 数据表只有一个自增长列，为主键列 3、外键约束 foreign key 写在创建语句最后 foreign key (从表字段名) references 主表名 （主表字段名） 4、非空约束 not null 5、默认约束 default 值，注意字符串，需外加单引号 6、唯一约束 unique 主键约束和唯一约束的区别，主键无意义，唯一约束可以为 null 设计规范 1NF（第一范式）保证数据列的原子性 家庭住址 可分为省 市 县 具体地址 2NF 保证每列都和主键相关（唯一主键，联合主键不满足） 学号 姓名 课程 教材 教材内容 1 张三 数据库 mysql XXXXX（1 千字） 1 张三 java java 2 李四 数据库 mysql XXXXX（1 千字）3 王五 数据库 mysql XXXXX（1 千字） 数据冗余 更新异常 插入异常 删除异常 3NF 保证每列都和主键直接相关 学号 姓名 班级 辅导员编号 辅导员姓名 辅导员家庭住址 第三章讲义专有名词 行称为实体 row 列称为字段 field 数据库的增删改操作 1、插入数据 insert into 表名（列 1，列 2，。。。） values（值 1，值 2，。。。）； 查询数据 select * from 表名; 2、into 关键字可以省略简写形式 insert 表名（列 1，列 2，。。。） values（值 1，值 2，。。。）； 3、全列插入可省略列明 简写形式 insert 表名 values（值 1，值 2，。。。）； 4、自增列和默认列可省略 注意：自增列只增不减 除非：alter table 表名 set auto_increment=值; 或者 truncate table 表名; 清空表，自增从 1 开始记数 5、一次插入多行 insert 表名（列 1，列 2，。。。） values（值 1，值 2，。。。），（值 1， 值 2，。。。），。。。。； 6、比较运算 &gt;大于&gt;=大于等于&lt;小于&lt;=小于等于 =等于 !=或&lt;&gt;不等于 is null 为空 is not null 非空 in 在某个范围 not in 不在某个范 围 like 模糊查询 between and 在某个范围 7、逻辑运算 not 非 and 并且 or 或者 not》and》or 8、修改数据 update 表名 set 列名 1=值 1，列名 2=值 2… where 条件; 如果没有 where 全更新 9、删除数据 delete from 表名 where 条件;注意删除数据不更改自增列的值 10、清空数据 truncate table 表名功能同 delete from 表名 但是 1&gt;Delete 无法修改自增列，truncate 重置自增列 2&gt;Delete 可以删除外键约束，truncate 只能清空数据，无法删除外 键约束 3&gt;Delete 可以通过备份和日子恢复，truncate 无法恢复 第四章讲义注意： 1、数据库没有双引号，字符一定要用单引号包括 2、字段名不用引号，单引号包括的一定是字符 ``(数字键 1 左边的键) 查询语句select 字段 1、字段 2… from 表名 where 条件 order by 字段 1、 字段 2.. limit 数字 1,数字 2; *是通配符，表示所有字段 使用 as 为字段重命名 3、where 查询条件 4、distinct 查询不重复字段 5、limit n,m 从 n+1 行开始取，取 m 行，行数从 0 开始 limit n,取前 n 行 6、order by 字段 1 通过字段 1 将表从小到大排列 order by 字段 1 desc order by 字段 1,字段 2 先按照字段 1 排列，在字段 1 相同的情况下按照字段 2 排列 成绩表，姓名，成绩 查询一下第 3 到 6 的女学生姓名 select 姓名 from 成绩表 where 性别=’女’ order by 成绩 desc limit 2,4; MySQL 函数 concat(‘今天’,’晴天’) 拼接字符串 length(‘hello world’) 计算长度，一个字符，符号，数字占 1 位，一个汉字占 3 位 upper(‘abcd’) 转成大写 ltrim(‘ abc’) 清除左侧空格 rtrim(‘abc ‘) 清除右侧空格 trim(‘ abc ‘) 清除两侧空格 replace(‘abccd’,’c’,’x’) 将 abccd 中的所有 c 替换成 x strcmp(‘a’,’b’) 比较字符串大小 substring(‘abcdefg’,3,3) 取子串，从第 3 个开始取，取 3 个 数学函数 rand(); 取 0~1 的随机小数，取不到 0 和 1 ceil();向上取整 floor(); 向下取整 第五章讲义模糊查询和分组查询 模糊查询使用 like 关键字， _代表一个字符 ，%代表任意长度的字 符（0 也是任意长度） between and 关键字，表示大于等于第一个数，小于等于第二个数 select * from stuinfo where age between 18 and 20； where age &gt;=18 and age&lt;=20; 聚合函数 求和 sum，平均 avg，最大 max，最小 min，个数 count(*) 使用聚合函数只有一行结果 分组查询 group by 写在 where 后面，order by 前面 select * from stuinfo group by age; 只有聚合函数和被分组的列有意义 使用 having 对分组结果进行条件查询，写在 group by 后面 P43 count(*)和 count(列名) count(列名)，如果列里面是 null 的，不计入总数 第六章讲义数据库有3中连接方式（MySQL有），其他数据库如（Oracle，SQL Server） 有 4 中包括全连接 1、内连接 SELECT 列名 1,列名 2… FROM 表 1，表 2 WHERE 条件 另一种写法 SELECT 列名 1,列名 2… FROM 表 1 INNER JOIN 表 2 ON 条件 2、左连接 SELECT 列名 1,列名 2… FROM 表 1 LEFT JOIN 表 2 ON 条件 3、右连接 SELECT 列名 1,列名 2… FROM 表 1 RIGHT JOIN 表 2 ON 条件 4、全连接 先左连接再右连接"},{"title":"MySQL的基本增删改查","date":"2019-10-28T11:43:14.000Z","path":"2019/10/28/MySQL的基本增删改查/","text":"数据库层次:库——&gt;表——&gt;字段；对于数据库： 创建数据库： 1create database 数据库名; （字符集设置 default character set uft8）； 删除数据库： 1drop database 数据库名; （误删了可以参考mysql的数据恢复） 查看数据库 1show databases; (可以查看当前有几个数据库；) 查看某一数据库的详细信息（字符集） 1show create database 数据库名； 表的基本操作: 进行表的操作之前必须要确定对哪一个数据库的表操作； 1use 数据库； (切换到某一想操作的数据库上) 查看数据库： 1show tables;（主要是用于查看有什么表） 查看表的详细语句；有点类似于建表的时候的语句: 1show create table 表名； 增： 1create：（创建表） 语法规则： 12345678create table 表名（字段名1 数据类型 （解释） 约束条件，字段名2 数据类型 （解释） 约束条件，）；解释的写法： comment ‘注释内容’ 约束： 12345UNIQUE 唯一约束，顾名思义NOT NULL 非空约束，此数据插入不可以为空PRIMARY KEY 主键约束，用于标识表的记录，不允许为空，可以加快查询速度； 注意：创建表的时候不能重名。 改表名： 1ALTER TABLE 旧表名 RENAME TO 新表名； 修改字段的数据类型： 1ALTER TABLE 表名 MODIFY 字段名 新数据类型; 修改字段名（也可以修改数据类型） 1ALTER TABLE DBNAME CHANGE 字段名 新字段名 数据类型； 增加字段: 1ALTER TABLE DBNAME ADD 字段名 数据类型 约束条件 放在哪（First或者after 哪个） 删除字段: 1ALTER TABLE DBNAME DROP 字段名； 删除表: 1drop table tablename (即使没有也可以不报错，加上if exist的话)"},{"title":"JAVA面向对象总结","date":"2019-10-18T20:18:41.000Z","path":"2019/10/19/JAVA面向对象总结/","text":"第二章 类和对象 1.面向对象概念： ​ 面向对象的思想就是把一个项目，分成更小的项目，每一部分负责什么功能最后再由这些组成一个整体。 2.类的创建 12语法：public class 类名&#123;&#125;File---&gt;new---&gt;class---&gt;类名 3.创建对象 类名 对象名=new 类名(); 对象名.方法名(); 对象名.属性 4.构造方法：方法名和类名相同,没有返回值 12 public 类名()&#123;&#125;//主要的做用是初始化操作&#125; 5.构造方法重载 在同一个类中，方法名相同，参数个数，顺序，类型不相同的构造方法 1234public class 类名&#123; public 类名()&#123;&#125; public 类名(String name,int age)&#123;&#125;&#125; 6.构造方法的执行 new 类名();—&gt;执行构造方法 super();—&gt;执行了父类的构造方法 7.static静态修饰符 静态修饰符可以修饰属性，方法，代码块 类名.属性 类名.方法名 8.java内存（栈和堆，static，方法区，gc（垃圾回收机制）） 第三章 面向对象三大特征—封装 1.封装的概念 封装是指将对象的状态信息隐藏在对象内部，不允许外部程序直接访问对象内部信息，而是通过该类所提供的方法来实现对内部信息的操作访问。 2.封装的步骤 1231.把属性私有化（private）2.对这些属性设置get和set方法3.调用处理这些方法 3.封装的作用：避免一些用一些不合乎常理的操作 4.修饰符 1234public---&gt;公共的：在一个项目中都可以访问，权限最高private---&gt;私有的：只能在本类中进行访问，权限最低protected---&gt;安全的，受保护的：同一个包能进行访问，继承中之类可以访问父类default---&gt;默认的：同一个包能访问 第四章 面向对象三大特征—继承 1.继承的概念：父亲儿子，电影《西虹市首富》 2.继承的关键字：extends 3.继承的语法： 1public class 类名 extends 父类&#123;&#125; 4.使用，在子类中： 可以直接调用父类的非私有属性和方法 可以用super.方法 super.属性 5.父类构造方法调用：super(); 调用父类的构造方法必须在之类中调用 必须实在之类构造方法的第一行代码 6.重写 必须继承 方法名一致，参数个数，顺序，类型全部一致 第五章 面向对象（多态） 1.多态的概念 多态是指允许不同类的对象对同一消息做出响应。 2.多态的必要条件 12345继承重写父类引用指向子类对象（向上转型） 3.多态的使用 123456789101112131415161718public class Father&#123; public void cooking()&#123; System.out.println(&quot;米饭&quot;); &#125;&#125;public class Son extends Father&#123; public void cooking()&#123; System.out.println(&quot;熬粥&quot;); &#125;&#125;public class Test &#123; public static void main(String[] args) &#123; Father son=new Son(); son.cooking(); &#125;&#125; 4.向下转型 1Son son=(Son)father; 第六章 抽象 1.抽象的概念 抽象就是用程序的逻辑方法和数据结构来模拟现实生活中的世界。 2.抽象的关键字 123abstract可以修饰类，可以修饰方法 3.抽象的用法 123456//抽象类public abstract class 类名&#123;//抽象方法没有方法体public abstract void 方法名(); &#125;//当父类是抽象类的时候，子类必须重写父类里面的抽象方法 4.final修饰符：最终的 12345修饰变量，修饰方法，修饰类1.当修饰变量时，变量转换成常量，常量的值不能改变final int a=18;//a=18;不能改变,必须给一个初始值2.当修饰方法时，该方法不能被重写3.当修饰类时，该类不能被继承 第七章 接口 1.接口的概念 接口是一种标准和规范，他们可以约束累的行为，是一些方法特征的集合，但是没有方法的实现。 2.接口的关键字 1interface 3.接口的语法 12public interface 接口名&#123;&#125;File---&gt;new---&gt;interface//创建接口 4.接口的用法 1实现接口的关键字 implements 123456789101112131415public interface 接口名&#123; //接口是纯抽象类 //接口里面的方法都是抽象方法 void setData(); &#125; public class Play implements 接口名&#123; void setData()&#123; &#125; &#125; public class Test &#123; public static void main(String[] args) &#123; Play play=new Play(); play.setData(); &#125; &#125; 注意接口可以进行多继承 public interface 接口名 extends 接口名，接口名{} 一般用法 public class 类名 extends 父类 implements 接口，接口{} 第八章 集合框架 1.ArrayList 1234用法ArrayList list=new ArrayList();list.add();//添加数据list.get();//获取数据 2.Map 1234用法Map map=new HasMap();map.put(key,value);//key不能重复map.get(key);//获取key对象的value 3.泛型 123ArrayList&lt;String&gt; list=new ArrayList&gt;&lt;String&gt;();Map&lt;String,String&gt; map=new HasMap&lt;String,String&gt;();ArrayList&lt;Map&lt;String,String&gt;&gt; list=new ArrayList&gt;&lt;Map&lt;String,String&gt;&gt;();"},{"title":"博客的上传","date":"2019-10-13T22:52:31.000Z","path":"2019/10/14/博客的上传/","text":"​ 本篇文章主要写了hexo博客的上传，在Git里面的一些简单操作。 1、准备工作打开你的本地文件夹“\\hexo\\blog”，选中右击选择“Git Bash Here ” 2、创建你的博客文章输入代码 1hexo new&quot;我的第一篇博客&quot; 这时就创建了一个md文件。 其中INFO的后面是你创建的文件的地址，按照这个地址，找到你的文件用Typora软件进行编辑。没有Typora软件的后面可以去网上下载进行安装，就可以了。 Typora下载地址：https://www.typora.io/ 3、进行上传编辑完成后再回到“Git Bash Here ”中 输入代码： hexo g 生成静态页面 可以看到已经加载出了你的博客 然后再输入： hexo d 进行上传 再刷新你的博客地址，就看到你的博客已经上传了。 4、补充其中写好自己的博客后，可以先在自己的本地进行查看，以免上传上去之后先修改还要再重新写，重新上传。很麻烦。代码： hexo s 然后在你的本地浏览器上输入 http://localhost:4000 进行查看。 不满意的时候还可以再进行修改。 我们有时候写的文章会很长不利于读者的查找和阅读 这时我们就可以在你的文章一定内容后加上代码 1&lt;!-- more --&gt; 这时文章就可以显示到这里，不在往下显示，在点击标题后可以阅读全文。这样可以让我们的博客显得简单明了。"},{"title":"我的第一篇博客","date":"2019-10-11T13:31:24.000Z","path":"2019/10/11/我的第一篇博客/","text":"我的第一篇博客123我的第一篇博客！可是这个人很懒呢！！什么都没有留下！ 结束！！"},{"title":"Hello World","date":"2019-10-11T10:18:41.000Z","path":"2019/10/11/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start Create a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment"}]